
$Id: INSTALL $

Updated for version 0.9.1 (18 Aug 2009)

Installation instructions for the OPeNDAP Hyrax server NcML Data Handling Module.


---------------------------------------------------------------------------

BUILDING THE SOFTWARE
BUILDING FROM THE SVN REPOSITORY
BUILD REQUIREMENTS
      MAKE AND INSTALL
      TESTSUITE
CONFIGURATION NOTES
DEBUGGING AIDS
NOTES
     
---------------------------------------------------------------------------

BUILDING THE SOFTWARE

0) Please read the BUILD REQUIREMENTS and NOTES sections of this file
   before reporting problems.  If you are building from the SVN
   repository, please follow the instructions in BUILDING FROM THE SVN
   REPOSITORY before continuing.

1) Type `./configure' at the system prompt. On some systems you may
   have to type `sh configure.' 

   The default location for the install is "/usr/local".  If your BES
   is installed in a different location, please use --prefix to change
   the prefix to the BES install location.  (For this document $prefix
   will refer to this directory).  NOTE: the CentOS RPM's install the
   BES to "/usr" and not "/usr/local".  If you are not sure, the BES
   will tell you its install dir when you run it with "besctl start".

2) Type `make' to build the handler.

3*) (*Optional): You can perform a 'make check' to test the module,
    but note that this REQUIRES that you have BOTH the netcdf and hdf4
    handlers installed.  The testsuite uses netcdf and hdf4 datasets
    for testing.  A portion of the suite uses DejaGNU, so you'll
    need that as well.  Please see the BUILD REQUIREMENTS section
    under TESTSUITE if you wish to run the tests and do not have these
    handlers installed.  Otherwise, you may skip this step.

4) Install the handler into the BES by running `make install'. 

5) Type 'make bes-conf' to run the bes-ncml-data.sh script which inserts
   the handler in the bes.conf file and adds test data to
   $prefix/share/hyrax/data.  It also associates .ncml files with the
   handler.  Please see the CONFIGURATION NOTES section below for
   information on precisely what it does if you have a problem.

6) For many installations, you must arrange for your operating system to find
   the shared libraries installed by default in $prefix/lib. Do this by
   either setting an environment variable such as LD_LIBRARY_PATH or by
   editing /etc/ld.so.conf. Different operating systems handle this in
   different ways.

7) Restart Hyrax (BOTH the BES and OLFS) to load the module.  

8*) (*Optional): Look at test data!
     
    First, check the installed sample_virtual_dataset.ncml which does
    not require any other handlers installed to test.  By default it's
    at: http://localhost:8080/opendap/ncml/sample_virtual_dataset.ncml

    Second, test the dataset wrapping by looking at the DDX response
    of the ncml test data that was installed, for example
    fnoc1_improved.ncml.ddx.  To view this file, you MUST have the
    netcdf module installed since it wraps the fnoc1.nc dataset.  See
    REQUIREMENTS->TESTSUITE below for more information.

    If you see an error like "Unable to add container, type of data
    must be specified", then your BES probably is not configured to
    server netcdf data properly.  Set it up to serve netcdf data, test
    it, clear the cache, and try again.


---------------------------------------------------------------------------
BUILDING FROM THE SVN REPOSITORY

  If you are building from a SVN checkout, run 'autoreconf --install --verbose'
  before './configure; make'. If you try to run autoconf, etc., by
  hand and wind up with build files that don't work, use 'autoreconf
  --force --install --verbose'. Once autoreconf has made the configure and
  Makefile.in files, do ./configure; make; make install as outlined
  above.  Make sure you have all the GNU tools necessary --- see BUILD
  REQUIREMENTS below.


---------------------------------------------------------------------------
BUILD REQUIREMENTS

  o MAKE AND INSTALL (no tests)
  
    o To build from a fresh SVN checkout, you'll need:

      	 o automake 1.10
      	 o autoconf 2.61
	 o libtool 1.5.6 

      Earlier versions may work, but
      may cause problems, particularly with the 'distcheck' target for
      make. Given those requirements, use 'autoreconf --force --install
      --verbose' and then build as described above.

      If you have an Intel Mac and you are experiencing configuration
      issues then you might need to download the latest and greatest
      autoconf, automake, and libtool using the DarwinPorts
      tool. We've tried using other download tools, like fink, and
      building from source these packages, but only DarwinPorts seems
      to resolve the issues. We continue to watch this issue and hope
      to get it resolved soon.

    o You should have gcc/g++ 3.3.x or greater. You'll also need to
      get the stdc++ library that matches the compiler (whatever
      version). NB: gcc 2.8.x and earlier *won't* build the
      software. We're working on modifying the software so that it
      will build with a variety of compilers. As of 01/22/03 we have
      built the code using Microsoft's Visual C++ 6.0 and GNU gcc/++
      3.2.1, 3.3, 3.4 and 4.0

    o You need the libdap library version 3.9.4 or greater to build
      and install this software. If you're using Linux, this means
      either building from source or using the libdap and libdap-devel
      RPM packages.  These are available at
      http://www.opendap.org/download/hyrax.html.  NOTE: libdap
      requires libxml2 2.6.16 and libcurl 7.10.6 as well.  [NOTE: If
      3.9.4 is not released when you build the software, you may build
      with 3.9.3, but several tests will fail and there will be a
      minor memory leak in the BES.]
      	  
    o You'll need version 3.7.2 or greater of the BES software
      installed before building the handler.  This is part of Hyrax
      1.5.2.  Build, install, and test it BEFORE you build this
      handler. 
      
      For Linux, you can get the bes and bes-devel RPM packages from
      http://www.opendap.org/download/hyrax.html.

    o You'll also need the OLFS for Hyrax 1.5.2 though it is not
    needed to build and install the software, only for the final test.

    o The NcML Module itself uses libxml2 2.6.16 which should be
      satisfied since libdap requires it as well.


  o TESTSUITE: (for 'make check')

    o In order for the 'make check' tests to succeed, you will need:
      
       o DejaGNU (http://www.gnu.org/software/dejagnu/)

       o The current version of the netCDF Data Handling Module for
       	 Hyrax and its dependency: libnetcdf 3.x (or greater).  The
       	 handler itself is found at
       	 http://www.opendap.org/download/hyrax.html.

	 o Mac Users: Mac users can get netcdf in DarwinPorts

	 o Note, if you install from an RPM, you need to run
	 "bes-nc-data.sh" to tell the BES to load the netCDF module.

       o The current version of the HDF4 Data Handling Module for
       	 Hyrax and its dependencies: libjpeg, zlib and slib usually.
       	 The handler is found at
       	 http://www.opendap.org/download/hyrax.html.

	 o Note: if you install from an RPM, you need to run
	 "bes-hdf4-data.sh" to tell the BES to load the HDF4 module.

       o The new testsuite now also uses Autotest, which is part of
       Autoconf.  This should work fine if you have autoconf installed
       (a prereq) but please let us know if it does not!

    o In order to view the test NcML file fnoc1_improved.ncml, you will
      need:
	
       o The current version of the netCDF Data Handling Module (see
       above for more info).


---------------------------------------------------------------------------
CONFIGURATION NOTES

  o The NcML Data Handler is a module dynamically loaded into the BES.
  This is specified in the bes.conf file, which lives in
  $prefix/etc/bes/bes.conf (or perhaps /etc/bes/bes.conf if you used
  an RPM).  First, it adds the 'ncml' module to the BES.modules list
  and specifies the location of the shared library:

  	BES.modules=dap,dapcmd,ncml
    	BES.module.ncml=/usr/local/lib/bes/libncml_module.so

  Then it associates ".ncml" extensions (compressed as well) with the
  "ncml" module by a appending a regular expression to the TypeMatch
  key:

        BES.Catalog.catalog.TypeMatch=ncml:.*.ncml(.bz2|.gz|.Z)?$;

  o If you are trying to do the 'make check' or see the test data
  (fnoc1_improved.ncml), you should also see an entry for the "nc"
  module and/or the "hdf4" module.  If not, make sure you run the
  scripts (see REQUIREMENTS->TESTSUITE below).

---------------------------------------------------------------------------
DEBUGGING AIDS

   o The NcML handler uses the BES debugging channels ("ncml" channel)
     which can be turned on as documented in
     http://docs.opendap.org/index.php/BES_-_How_to_Debug_the_BES.

     In short, you need to compile a BES with --enable-developer and
     then run it standalone or as server with the -d "cerr,ncml"
     option.  For example,

    	     > besctl start -d "cerr,ncml"

     This will turn on the NcML debug channel which will output
     detailed information as the parse proceeds.  In most cases the
     error response from the server should be enough to create a bug
     report if there's an internal error reported.  If you see an
     internal error, please report it!

   o You can create a debuggable version of the handler with:
     
     ./configure --enable-developer CXXFLAGS="-g3 -O0 -W -Wall -Wcast-align -fno-defer-pop"

     at configure time.

---------------------------------------------------------------------------
NOTES

  o The NcML Module was built to work with Hyrax 1.5.2 server.

  o The Int32 and UInt32 tests (min and max bounds, 4 total tests) are
  known to fail for libdap 3.9.3.  3.9.4 or greater should solve this
  problem.

  o There is also a known (small) memory leak for libdap 3.9.3.
  Again, 3.9.4 will solve this.


